<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>halo-examination</artifactId>
        <groupId>com.evildoer.exam</groupId>
        <version>1.0.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>examination-serve</artifactId>

    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bootstrap</artifactId>
        </dependency>

        <dependency>
            <groupId>com.evildoer.exam</groupId>
            <artifactId>examination-api</artifactId>
            <version>${halo.version}</version>
        </dependency>

        <dependency>
            <groupId>com.evildoer.exam</groupId>
            <artifactId>common-mybatis</artifactId>
            <version>${halo.version}</version>
        </dependency>

        <dependency>
            <groupId>com.evildoer.exam</groupId>
            <artifactId>common-web</artifactId>
            <version>${halo.version}</version>
        </dependency>

        <dependency>
            <groupId>com.evildoer.exam</groupId>
            <artifactId>common-redis</artifactId>
            <version>${halo.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!--监控-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- nacos 依赖-->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>

        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
<!--            <plugin>-->
<!--                <groupId>com.spotify</groupId>-->
<!--                <artifactId>docker-maven-plugin</artifactId>-->
<!--                <version>1.0.0</version>-->
<!--                <executions>-->
<!--                    &lt;!&ndash;执行mvn package,即执行 mvn clean package docker:build&ndash;&gt;-->
<!--                    &lt;!&ndash;<execution>-->
<!--                        <id>build-image</id>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>build</goal>-->
<!--                        </goals>-->
<!--                    </execution>&ndash;&gt;-->
<!--                </executions>-->

<!--                <configuration>-->
<!--                    &lt;!&ndash; 镜像名称 &ndash;&gt;-->
<!--                    <imageName>${project.artifactId}</imageName>-->
<!--                    &lt;!&ndash; 指定标签 &ndash;&gt;-->
<!--                    <imageTags>-->
<!--                        <imageTag>latest</imageTag>-->
<!--                    </imageTags>-->
<!--                    &lt;!&ndash; 基础镜像&ndash;&gt;-->
<!--                    <baseImage>openjdk:8-jdk-alpine</baseImage>-->

<!--                    &lt;!&ndash; 切换到容器工作目录&ndash;&gt;-->
<!--                    <workdir>/</workdir>-->

<!--                    <entryPoint>["java","-jar","${project.build.finalName}.jar"]</entryPoint>-->

<!--                    &lt;!&ndash; 指定远程 Docker API地址  &ndash;&gt;-->
<!--                    <dockerHost>https://c.halo.store:2376</dockerHost>-->
<!--                    &lt;!&ndash; 指定tls证书的目录 &ndash;&gt;-->
<!--                    <dockerCertPath>C:\certs\docker\c.halo.store</dockerCertPath>-->

<!--                    &lt;!&ndash; 复制 jar包到docker容器指定目录&ndash;&gt;-->
<!--                    <resources>-->
<!--                        <resource>-->
<!--                            <targetPath>/</targetPath>-->
<!--                            &lt;!&ndash; 用于指定需要复制的根目录，${project.build.directory}表示target目录 &ndash;&gt;-->
<!--                            <directory>${project.build.directory}</directory>-->
<!--                            &lt;!&ndash; 用于指定需要复制的文件，${project.build.finalName}.jar就是打包后的target目录下的jar包名称　&ndash;&gt;-->
<!--                            <include>${project.build.finalName}.jar</include>-->
<!--                        </resource>-->
<!--                    </resources>-->
<!--                </configuration>-->
<!--            </plugin>-->
        </plugins>
    </build>

</project>